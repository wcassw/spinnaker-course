== Outline Proposed

* Spinnaker Concepts Application Management: Understanding the model
** Applications, Clusters, Server Groups, Load Balancers, Firewalls
* Application Deployments: Understanding the model
** Pipelines, Stages, and related Deployment Strategies
* A Look at Continuous Integration, Delivery, and Deployment
** The differences b/w integration, delivery, and deployment
** Iteratively releasing infrastructure or resource changes vs application deployments
* Controlling cloud resources with Spinnaker
** Diving deeper into Clusters and contained resources through the UI
** Spinnaker for managing AWS
*** Installing Managed and Managing Accounts for working with AWS in Spinnaker
** Spinnaker for running Terraform
** Spinnaker EKS (Kubernetes Cloud) provider
*** Installing and configuring
*** Managing K8s nodes
** Managing and connecting other resources
*** RDS, S3, VPCs, etc.
*** Managing EC2 with Spinnaker
** *LAB 1: Deploying / Managing Cloud Infrastructure*
*** Spinnaker with Terraform setup, general usage, whatever common patterns exist for running Terraform from Spinnaker
*** Setting up Spinnaker for AWS: Managed and Managing Accounts
*** Setting up the Kubernetes Cloud Provider, Managing EKS with Spinnaker
*** Spinnaker with Terraform for AWS infrastructure: EKS, RDS, S3, VPCs
* Application Deployment with Spinnaker
** Pipelines in Spinnaker and how they relate to general CI/CD pipelines
*** Working with triggers and parameters
** Working with Stages
*** Bake
*** Deploy
*** Bake Manifests
*** Deploy Manifests
*** Run Job Manifests
*** Find Image By Tag
*** Pipeline
*** Wait
*** Manual Judgement
*** Evaluate Variables
*** Precondition Check
** Working with Deployment strategies
*** Blue/green
*** Rolling blue/green
*** Canary
*** Highlander
** Deploying an application
*** Webhooks in Spinnaker
*** Analysis and results processing
*** Rollback strategies
** *LAB 2:* Deploying Microservices to EKS
*** Source control connection and triggers setup
*** Building a Pipeline using stages and deployment strategy decisions
*** Validating deployments, rolling back, and updating existing deployments
** Deploying Helm Charts using Spinnaker
*** The standard pattern for deploying Helm charts using Spinnaker
*** Deploying charts to EKS
*** Helm chart overrides using Spinnaker
** *LAB 3:* Deploying Helm Charts Using Spinnaker
*** Deploy a group of charts into a fresh EKS cluster
*** Upgrading charts, exploring limitations of Helm functionality in Spinnakerâ€™s Helm deployment model: template -> kubectl apply rather than using helm CLI directly
*** Rolling back
* Diving Deeper into Spinnaker Usage and Administration 
** Usage
*** Guide to customizing builds, stages, and other non-standard use-cases
*** The Spinnaker Pipeline Expression Language
*** Passing info between stages
** Troubleshooting: Pipeline/Stage Failures
*** Dealing with timeouts, intermittent errors at different stages, etc.
*** General troubleshooting via Spinnaker logs, tracing back from source to deployment issues
*** Identifying issues at the Spinnaker level vs dependencies such as SCM or deployment destination
*** How to trace problems to logs and other helpful troubleshooting resources in cloud providers, e.g. EKS logs, etc.
** *LAB 4:* Deeper Dive Experimentation Options
*** Some slightly more complex Pipelines:
*** Sharing data and artifacts between pipelines
*** Secrets management and usage We use Vault here -- Can we dovetail that in?
*** Cross-team Pipelines
*** Experimenting with the Spinnaker pipeline
*** expression language
*** Debugging failures from source to cloud
