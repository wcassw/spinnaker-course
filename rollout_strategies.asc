<<<<

== Rollout Stratagies

* Deploys your containers as either:
** Dark Rollouts
** Highlander
** Red/Black (also known as Blue/Green)
* Is only valid for Kubernetes `ReplicaSet`
* Verifies health checks
* Disables old server groups
* Enabling new server groups

=== Configuration Options

* Configuration options allow you to associate a workload with one or more services
* Decide whether the workload should receive traffic, and determine how Spinnaker should handle any previous versions of the workload in the same cluster and `namespace`

image::deployment_strategy.png[]

=== Configuration Details

* Service namespace - Select the namespace containing the service(s) you would like to associate with the workload.
* Service(s) - Select one or more services you would like to associate with the workload. Spinnaker will add a traffic.spinnaker.io/load-balancers annotation listing the selected services as described here.  
* Traffic - Check this box if you would like the workload to begin receiving traffic from the selected services as soon as it is ready. If you do not check this box, you can add a subsequent Enable (Manifest) stage to begin sending traffic to the workload.
* Strategy - Select a strategy if you would like Spinnaker to handle previous versions of the workload currently deployed to the same cluster and namespace. Select None if you do not want Spinnaker to take any action regarding existing workloads.

=== Strategies

=== Dark Rollouts

* Use a dark rollout to deploy a new version of your application alongside the existing version(s)
* Does not immediately route any traffic to the new version.
* Optionally, add subsequent Enable (Manifest) and Disable (Manifest) stage to begin sending traffic to the new version and stop sending traffic to the old version(s).

image::https://www.spinnaker.io/guides/user/kubernetes-v2/rollout-strategies/dark.png[]

=== Highlander

____
"There can be only one" -- Highlander (1986)
____

* Deploy a new version of your application alongside the existing version(s)
* Send client traffic to the new version
* Then disable and destroy existing versions in the cluster

image::https://www.spinnaker.io/guides/user/kubernetes-v2/rollout-strategies/highlander.png[]

=== Red/Black (Blue/Green)

* Red/black rollout to deploy a new version of your application alongside the existing version(s)
* Send client traffic to the new version, and then disable existing versions in the cluster
* Optionally, add subsequent Destroy (Manifest) stages to clean up any unwanted workloads in the cluster
* Alternately, easily roll back to a previous version by:
** Configuring an *Enable (Manifest)* stage
** Or using an ad-hoc Enable operation from the Clusters tab.

image::https://www.spinnaker.io/guides/user/kubernetes-v2/rollout-strategies/redblack.png[]
