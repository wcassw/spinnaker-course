== Deploying Microservices

=== The Process

image::process.png[]

=== The Steps

. Setup a repository for a microservice
. Setup a CI application to run unit integration tests
. Create an Spinnaker Application
. Define the Infrastructure
. Create a Pipeline
. Run your Pipeline

Source: https://www.spinnaker.io/guides/user/get-started/

=== Create an Application

* One Application per Microservice
* This is the root where we will begin
* Note that your application configuration affects what you can do with Spinnaker—you can enable or disable some Spinnaker features.

=== About an Application

* An application in Spinnaker is a construct that represents some service that you are going to deploy (typically a microservice).
* It includes:
** The pipelines that process the service through to deployment in production
** The infrastructure on which the service is run:
*** Clusters
*** Server Groups
*** Firewalls
*** Load Balancers
*** Canary Configs

=== Creating the Application

image::create_application_action.png[]

* You can’t create a deployment pipeline unless you have an application to put it in.
* Click on the *Applications* tab
* Click on Create Application

=== Entering Application Attributes

* Provide the attributes for the new Application
* Click **Create**

image::create_application.png[width=50%, height=50%, align="center"]

=== More Application Attributes

[options="header", cols="1m,1,4"]
|===
|Field|Required|Description
|Name|Yes|A unique name to identify this application.
|Owner Email|Yes|The email address of the owner of this application, within your installation of Spinnaker.
|Repo type|No|The platform hosting the code repository for this application. Stash, Bitbucket, or GitHub.
|Description|No|Use this text field to describe the application, if necessary.
|Consider only cloud provider health|Bool, default=no|If enabled, instance status as reported by the cloud provider is considered sufficient to determine task completion. When disabled, tasks need health status reported by some other health provider (load balancer, discovery service).
|===

=== Application Attributes Continued

[options="header", cols="1m,1,4"]
|===
|Field|Required|Description
|Show health override option|Bool, default=no|If enabled, users can toggle previous option per task.
|Instance port|No|This field is used to generate links from Spinnaker instance details to a running instance. The instance port can be used or overridden for specific links configured for your application (via the Config screen).
|Enable restarting running pipelines|Bool, default=no|If enabled, users can restart pipeline stages while a pipeline is still running. This behavior is not recommended.
|===

[.columns]
=== Editing the Configuration


[.column]
--

If you need to go back and edit your configuration you can hit the config button on the upper right hand side

image::config_small_button.png[height=40%, width="40%"]
--

[.column]
--
The Configuration has some of the following sections:

* Edit Notifications
* Features
* Links
* Traffic Guards
* Custom Banners
* Delete Application
--

[.columns]
=== Editing Notifications

[.column]
--
Spinnaker can send notification for any application and are optional

Click *Add Notification Preferences*
--

[.column]
--
image::event_notification_prefs.png[align="center"]
--

[.columns]
=== Selecting the Notification Medium

[.column]
--
* Select the notification medium:
** Email
** SMS
** Slack
--

[.column]
--
image::event_notification_prefs.png[align="center"]
--

[.columns]
=== Editing Notifications

[.column]
--
* Provide the information for the type you chose:
** Email address
** Phone number
** Slack Members
--

[.column]
--
image::event_notification_prefs.png[align="center"]
--

[.columns]
=== Pipeline Events

[.column]
--
For each event, enter any custom text you want included in the notification.

* A pipeline started
* A pipeline finished
* A pipeline failed

--

[.column]
--
image::event_notification_prefs.png[align="center"]
--

[.columns]
=== Update and Adding Notifications

[.column]
--
. Click *Update*
. Repeat these steps to add more notifications, if you want.
. Click *Edit* next to any existing notification to change its preferences, or click *Remove* to delete it.
--

[.column]
--
image::event_notification_prefs.png[align="center"]
--

=== Enabling Features in Spinnaker

In order to not allow Spinnaker from annoying you about resources you don't use you can turn them off

image::features_panel.png[align="center"]

=== Custom Links

* You can include custom links to the instance details panel, providing shortcuts to information related to the instance, like logs, health, and so on.
* It currently doesn't work with Kubernetes resources unless exposed from cluster

image::custom_links.png[align="center"]

=== Custom Link Process

. In the *Links* section, click *Add Section*
. Provide text for the new *Section heading*.
. In the *Links* fields, type the text that you want to display, and the path to the link target.
. You can reference these specific instance attributes by wrapping them in curly braces. For example, to include the region where the instance lives, for a GCE or AWS instance, use `{region}`. These are for the path only, not the link display text.
. Click *Add Link* for each additional link you want displayed in this section.
. Click *Add Section* for any additional sections.
. Click *Revert* to clear your work in progress.
. This does not remove any saved custom instance links.
. Click *Save Changes* when you’re finished.

=== Traffic Guards

image::traffic_guards.png[align="center"]

* A traffic guard is a cluster which you have designated as always having at least one active instance.
* With traffic guard enabled, if a user or process tries to delete, disable, or resize the server group, Spinnaker will verify the operation will not leave the cluster with no active instances, and fail the operation if it would.

=== Traffic Guard Process

In the Traffic Guards section:

* Click *Add Traffic Guard*
* Set the following values as seen in table below
* Click *Save Changes* to apply your new traffic guard, or changes to an existing one

[cols="1,1,3",options="header"]
|===
|Field|Required?|Description
|Account|Yes|The account for which you’re setting up the traffic guard
|Region|Yes|The applicable region from the list, or * for all
|Stack|No|The stack to which to apply this traffic guard. Leave blank to apply the guard only to a cluster that has no stack.
|Detail|No|The detail string necessary to identify this cluster via the application-stack-detail naming convention|===
|===

=== Custom Banners

image::banner.png[]

=== Custom Banner Process

You can create simple text based banners

. Click *Add Banner*
. Click *Enable* to enable the banner
. Select a text color for the foreground color
. Select a background color for the background color


=== Define the Infrastructure the Service will run

* You define infrastructure for each application. 
* Your pipelines deploys services to the server groups you define.
* This means that production environments can be deployed without a pipeline.
* This will provide you with the initial production environement

NOTE: this step is not a prerequisite for creating pipelines. In fact, you can use pipelines to create infrastructure.

=== Pipelines

* How we control and deploy our application
* Series of stages that can be combined in any order
* Can be automatic or manual
* Triggered by a wide arrange of inputs

=== Create a Pipeline

* After creating the Application, navigate the *Pipelines* tab in your navigation
** Name your pipeline
** Then add stages

image::https://www.spinnaker.io/guides/user/pipeline/managing-pipelines/images/create.png[]

=== Configuration Stage

* The initial stage that you are provided is the configuration stage
* It is where we define:
** _expected artifacts_
** _triggers_
** _parameters_
** _notifications_

=== Adding Stages

image::https://www.spinnaker.io/guides/user/pipeline/managing-pipelines/images/add-stage.png[]

=== Adding Stage Process

* The first step in any pipeline is *Configuration*, where you can set up pipeline triggers and parameters.
* Each stage specifies an action the pipeline will take once it’s configured.
* The steps include
** Select Add stage from your pipeline configuration screen.
** Set the stage type using the drop-down menu.

=== Stage Depends On

If this isn’t the first stage in your pipeline, make sure that this stage depends on the desired upstream stage(s) using the Depends on field.

image::https://www.spinnaker.io/guides/user/pipeline/managing-pipelines/images/stage-depends-on.png[]

=== Manually Run your Pipeline

You can run a pipeline manually, but most pipelines are triggered automatically.
If you so care to, particularly if you don't want to redo the build, you can click on *Start Manual Execution*

image::https://www.spinnaker.io/guides/user/pipeline/managing-pipelines/images/manual-execution.png[]

=== Application Deployment

image::https://www.spinnaker.io/concepts/pipelines.png[]

=== Disabling a Pipeline

* From the Pipelines tab, click *Configure* to modify an existing pipeline
* Click Pipeline actions in the upper right corner, and select *Disable*.

image::https://www.spinnaker.io/guides/user/pipeline/managing-pipelines/images/pipeline-actions.png[]

=== Deleting a Pipeline

* From the Pipelines tab, click *Configure* to modify an existing pipeline.
* Click *Pipeline actions* in the upper right corner, and select *Delete*.

image::https://www.spinnaker.io/guides/user/pipeline/managing-pipelines/images/pipeline-actions.png[]

=== Editing as JSON

image::https://www.spinnaker.io/guides/user/pipeline/managing-pipelines/images/pipeline-actions.png[]

=== Editing as JSON Process
* You can also edit your pipeline in JSON
* This is fraught with danger if you get it wrong
* It can be helpful if things go wrong already
** Perhaps the UI is not updating the backend correctly
** You wish to diagnose issues 
* When you use the *Edit as JSON* feature, you are directly editing the payload. 
* Edit as JSON allows you to set pipeline fields or properties not exposed by the UI.

=== Revision History

* Each time you save your pipeline, the current version is added to revision history
* You can use revision history to diff two versions of a pipeline or to restore an older version of a pipeline.

. From the *Pipelines* tab, click *Configure* to modify an existing pipeline
. Click *Pipeline Actions* in the upper right corner, and select *View revision history*

image::https://www.spinnaker.io/guides/user/pipeline/managing-pipelines/images/pipeline-actions.png[]

=== Changing Versions

* You can compare any version of your pipeline to either the version before it or the current pipeline.

. View the version history
. Select a version from the Revision drop-down.

image::https://www.spinnaker.io/guides/user/pipeline/managing-pipelines/images/revision-history.png[]

=== Comparing Version

You can also compare a review to either the current revision or the previous one

image::https://www.spinnaker.io/guides/user/pipeline/managing-pipelines/images/compare-version.png[]

=== Reverting your Pipeline

If you select a different version, you can revert to that same version

image::https://www.spinnaker.io/guides/user/pipeline/managing-pipelines/images/restore-revision.png[]

// Did not include Locking, since that would really make the class messy

=== Rename a Pipeline

. From the *Pipelines* tab, click *Configure* to modify an existing pipeline.
. Click *Pipeline actions* in the upper right corner, and select *Rename*

image::https://www.spinnaker.io/guides/user/pipeline/managing-pipelines/images/pipeline-actions.png[]
